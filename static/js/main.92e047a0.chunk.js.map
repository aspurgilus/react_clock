{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","setInterval","setState","console","log","toLocaleTimeString","prevProps","name","props","clearInterval","React","Component","App","isClockVisible","clockName","setClockVisible","setClockHidden","generateClockName","Math","floor","random","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,QAA+B,KALjC,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,aAAY,WACzB,EAAKC,SAAS,CAAEL,KAAM,IAAIC,OAG1BK,QAAQC,IAAI,EAAKR,MAAMC,KAAKQ,wBAC3B,OAbP,gCAgBE,SAAmBC,GACbA,EAAUC,OAASP,KAAKQ,MAAMD,MAEhCJ,QAAQC,IAAR,qCAA0CE,EAAUC,KAApD,eAA+DP,KAAKQ,MAAMD,SAnBhF,kCAuBE,WACMP,KAAKD,SACPU,cAAcT,KAAKD,WAzBzB,oBA6BE,WACE,OACE,8CAEG,IACAC,KAAKJ,MAAMC,KAAKQ,4BAlCzB,GAA2BK,IAAMC,WCN3BC,E,4MACJhB,MAAQ,CACNiB,gBAAgB,EAChBC,UAAW,G,EAGbC,gBAAkB,kBAAM,EAAKb,SAAS,CAAEW,gBAAgB,K,EAExDG,eAAiB,kBAAM,EAAKd,SAAS,CAAEW,gBAAgB,K,EAEvDI,kBAAoB,kBAAM,EAAKf,SAAS,CAAEY,UAAWI,KAAKC,MAAsB,IAAhBD,KAAKE,a,4CAErE,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,6CAECrB,KAAKJ,MAAMiB,gBACV,cAAC,EAAD,CAAON,KAAMP,KAAKJ,MAAMkB,YAG1B,wBACEQ,KAAK,SACLC,QAASvB,KAAKe,gBAFhB,wBAOA,wBACEO,KAAK,SACLC,QAASvB,KAAKgB,eAFhB,wBAOA,wBACEM,KAAK,SACLC,QAASvB,KAAKiB,kBAFhB,oC,GAnCUP,IAAMC,WA8CTC,IC/CfY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.92e047a0.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  name: number;\n}\n\ninterface State {\n  date: Date;\n}\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    date: new Date(),\n  };\n\n  timerId: NodeJS.Timer | null = null;\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      this.setState({ date: new Date() });\n\n      // eslint-disable-next-line\n      console.log(this.state.date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    return (\n      <p>\n        Current time:\n        {' '}\n        {this.state.date.toLocaleTimeString()}\n      </p>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: false,\n    clockName: 0,\n  };\n\n  setClockVisible = () => this.setState({ isClockVisible: true });\n\n  setClockHidden = () => this.setState({ isClockVisible: false });\n\n  generateClockName = () => this.setState({ clockName: Math.floor(Math.random() * 100) });\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {this.state.isClockVisible && (\n          <Clock name={this.state.clockName} />\n        )}\n\n        <button\n          type=\"button\"\n          onClick={this.setClockVisible}\n        >\n          Show Clock\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.setClockHidden}\n        >\n          Hide Clock\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.generateClockName}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}