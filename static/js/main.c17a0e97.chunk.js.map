{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","undefined","setInterval","setState","console","log","toLocaleTimeString","this","prevProps","name","props","clearInterval","React","Component","App","isClockVisible","clockName","className","type","onClick","Math","floor","random","ReactDOM","render","document","getElementById"],"mappings":"sNAWaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,KACVC,aAASC,GAHb,uDAME,WAAqB,IAAD,OACZD,EAAwBE,aAAY,WACxC,EAAKC,SAAS,CAAEL,KAAM,IAAIC,OAG1BK,QAAQC,IAAI,EAAKR,MAAMC,KAAKQ,wBAC3B,KAEHC,KAAKJ,SAAS,CAAEH,cAdpB,gCAiBE,SAAmBQ,GACbA,EAAUC,OAASF,KAAKG,MAAMD,MAEhCL,QAAQC,IAAR,qCAA0CG,EAAUC,KAApD,eAA+DF,KAAKG,MAAMD,SApBhF,kCAwBE,WACEE,cAAcJ,KAAKV,MAAMG,WAzB7B,oBA4BE,WACE,OACE,8CAEG,IACAO,KAAKV,MAAMC,KAAKQ,4BAjCzB,GAA2BM,IAAMC,WCP3BC,E,4MACJjB,MAAQ,CACNkB,gBAAgB,EAChBC,UAAW,G,4CAGb,WAAU,IAAD,OACP,OACE,sBAAKC,UAAU,MAAf,UACE,6CAECV,KAAKV,MAAMkB,gBACV,cAAC,EAAD,CAAON,KAAMF,KAAKV,MAAMmB,YAG1B,wBACEE,KAAK,SACLC,QAAS,WACP,EAAKhB,SAAS,CAAEY,gBAAgB,KAHpC,wBASA,wBACEG,KAAK,SACLC,QAAS,WACP,EAAKhB,SAAS,CAAEY,gBAAgB,KAHpC,wBASA,wBACEG,KAAK,SACLC,QAAS,WACP,EAAKhB,SAAS,CAAEa,UAAWI,KAAKC,MAAsB,IAAhBD,KAAKE,aAH/C,oC,GAjCUV,IAAMC,WA8CTC,IC/CfS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c17a0e97.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  name: number;\n}\n\ninterface State {\n  date: Date;\n  timerId: NodeJS.Timer | undefined;\n}\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    date: new Date(),\n    timerId: undefined,\n  };\n\n  componentDidMount() {\n    const timerId: NodeJS.Timer = setInterval(() => {\n      this.setState({ date: new Date() });\n\n      // eslint-disable-next-line\n      console.log(this.state.date.toLocaleTimeString());\n    }, 1000);\n\n    this.setState({ timerId });\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.timerId);\n  }\n\n  render() {\n    return (\n      <p>\n        Current time:\n        {' '}\n        {this.state.date.toLocaleTimeString()}\n      </p>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: false,\n    clockName: 0,\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {this.state.isClockVisible && (\n          <Clock name={this.state.clockName} />\n        )}\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({ isClockVisible: true });\n          }}\n        >\n          Show Clock\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({ isClockVisible: false });\n          }}\n        >\n          Hide Clock\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({ clockName: Math.floor(Math.random() * 100) });\n          }}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}